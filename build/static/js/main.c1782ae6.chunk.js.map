{"version":3,"sources":["logo.svg","component/TodoForm.js","component/ToDo.js","component/TodoList.js","component/Clock.js","component/MainDashboard.js","firebase.js","App.js","reportWebVitals.js","index.js"],"names":["ToDoForm","addTask","useState","userInput","setUserInput","onSubmit","e","preventDefault","value","type","onChange","currentTarget","placeholder","ToDo","todo","handleToggle","id","name","onClick","className","complete","task","ToDoList","toDoList","handleFilter","map","style","margin","Clock","width","border","borderColor","baseColor","centerColor","centerBorderColor","handColors","second","minute","hour","MainDashboard","data","setToDoList","title","src","height","frameborder","scrolling","copy","length","TodoList","mapped","Number","filtered","filter","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getAnalytics","getFirestore","App","a","q","query","collection","where","getDocs","forEach","doc","console","log","useEffect","wherCla","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1782ae6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react';\r\n\r\nconst ToDoForm = ({ addTask }) => {\r\n\r\n    const [ userInput, setUserInput ] = useState('');\r\n\r\n    const handleChange = (e) => {\r\n        setUserInput(e.currentTarget.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        addTask(userInput);\r\n        setUserInput(\"\");\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input value={userInput} type=\"text\" onChange={handleChange} placeholder=\"Enter task...\"/>\r\n            <button>Submit</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default ToDoForm;","import React from 'react';\r\n\r\nconst ToDo = ({todo, handleToggle}) => {\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault()\r\n        handleToggle(e.currentTarget.id)\r\n    }\r\n\r\n    return (\r\n        <div id={todo.id} key={todo.id + todo.task} name=\"todo\" value={todo.id} onClick={handleClick} className={todo.complete ? \"todo strike\" : \"todo\"}>\r\n            {todo.task}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToDo;","import React from 'react';\r\nimport ToDo from './ToDo';\r\n\r\nconst ToDoList = ({toDoList, handleToggle, handleFilter}) => {\r\n    return (\r\n        <div>\r\n            {toDoList.map(todo => {\r\n                return (\r\n                    <ToDo todo={todo} handleToggle={handleToggle} handleFilter={handleFilter} key={todo.id}/>\r\n                )\r\n            })}\r\n            <button style={{margin: '20px'}} onClick={handleFilter}>Clear Completed</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToDoList;","import React from 'react'\r\nimport AnalogClock from 'analog-clock-react';\r\n\r\nfunction Clock() {\r\n    let options = {\r\n        width: \"150px\",\r\n        border: true,\r\n        borderColor: \"#2e2e2e\",\r\n        baseColor: \"#17a2b8\",\r\n        centerColor: \"#459cff\",\r\n        centerBorderColor: \"#fff\",\r\n        handColors: {\r\n          second: \"#d81c7a\",\r\n          minute: \"#fff\",\r\n          hour: \"#fff\"\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"clock__container\">\r\n            <AnalogClock {...options} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Clock\r\n","import React, { useState } from 'react'\r\nimport \"./MainDashboard.css\";\r\nimport ToDoForm from './TodoForm';\r\nimport TodoList from './TodoList';\r\nimport data from \"./data.json\";\r\nimport Clock from './Clock';\r\nfunction MainDashboard() {\r\n    \r\n  const [ toDoList, setToDoList ] = useState(data);\r\n\r\n  const handleToggle = (id) => {\r\n    let mapped = toDoList.map(task => {\r\n      return task.id === Number(id) ? { ...task, complete: !task.complete } : { ...task};\r\n    });\r\n    setToDoList(mapped);\r\n  }\r\n\r\n  const handleFilter = () => {\r\n    let filtered = toDoList.filter(task => {\r\n      return !task.complete;\r\n    });\r\n    setToDoList(filtered);\r\n  }\r\n\r\n  const addTask = (userInput ) => {\r\n    let copy = [...toDoList];\r\n    copy = [...copy, { id: toDoList.length + 1, task: userInput, complete: false }];\r\n    setToDoList(copy);\r\n  }\r\n    return (\r\n        <div>\r\n            <h1 className=\"red\">\r\n            Dashboard\r\n            </h1>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <iframe title=\"cal\" src=\"https://calendar.google.com/calendar/embed?height=600&amp;wkst=1&amp;bgcolor=%234285F4&amp;ctz=Asia%2FKolkata&amp;src=s.nishant%40aitglobalinc.com&amp;color=%23039BE5&amp;showTz=1&amp;mode=WEEK&amp;showTabs=1\"  height=\"520\" width=\"100%\" frameborder=\"0\" scrolling=\"no\"></iframe>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                    {/* <div className=\"row\"> */}\r\n                    <div className=\"col-md-12\">\r\n                        <Clock />                     \r\n                    </div>\r\n                    {/* </div> */}\r\n                    <div className=\"row\">\r\n                        <ToDoForm addTask={addTask}/>\r\n                        <TodoList toDoList={toDoList} handleToggle={handleToggle} handleFilter={handleFilter}/>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainDashboard\r\n","// import firebase from 'firebase';\r\n\r\n// const firebaseApp = firebase.initializeApp({\r\n//     apiKey: \"AIzaSyA8c9TtmDX2Iq36igJYlxamEk-Qc50SFpo\",\r\n//     authDomain: \"ait-chrome-extension.firebaseapp.com\",\r\n//     projectId: \"ait-chrome-extension\",\r\n//     storageBucket: \"ait-chrome-extension.appspot.com\",\r\n//     messagingSenderId: \"39912556137\",\r\n//     appId: \"1:39912556137:web:e526e38b3664c0401844f8\",\r\n//     measurementId: \"G-LQDNVDG8LC\"\r\n//   });\r\n//   const db = firebaseApp.firestore();\r\n//   const auth = firebaseApp.auth();\r\n//   const storage = firebaseApp.storage();\r\n  \r\n//   export { db, auth, storage };\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport { getFirestore, collection, getDocs } from 'firebase/firestore/lite';\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyA8c9TtmDX2Iq36igJYlxamEk-Qc50SFpo\",\r\n  authDomain: \"ait-chrome-extension.firebaseapp.com\",\r\n  projectId: \"ait-chrome-extension\",\r\n  storageBucket: \"ait-chrome-extension.appspot.com\",\r\n  messagingSenderId: \"39912556137\",\r\n  appId: \"1:39912556137:web:e526e38b3664c0401844f8\",\r\n  measurementId: \"G-LQDNVDG8LC\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst analytics = getAnalytics(app);\r\n\r\nconst db = getFirestore(app);\r\nexport{ db }\r\n","import logo from './logo.svg';\nimport './App.css';\nimport MainDashboard from './component/MainDashboard';\nimport { db } from './firebase';\nimport { useEffect } from 'react';\nimport { collection,query, where, collectionGroup,getDocs } from 'firebase/firestore/lite';\nfunction App() {\n  useEffect(() => {\n// console.log(getTodoList(db));\nwherCla(db)\n}, []);\nasync function getUsers(db) {\n  const usersCol = collection(db, 'users');\n  const userSnapshot = await getDocs(usersCol);\n  const userList = userSnapshot.docs.map(doc => doc.data());\n  return userList;\n}\nasync function wherCla(db){\n  // var reference = db.collection(\"users\").doc(\"hLUizMq2l7VhxFIH5XGf\");  \nconst q = query(collection(db, \"todoList\"), where(\"id\", \"==\", 1));\nconst querySnapshot = await getDocs(q);\n\nquerySnapshot.forEach((doc) => {\n  // doc.data() is never undefined for query doc snapshots\n  console.log(doc.id, \" => \", doc.data());\n});\n}\nasync function getTodoList(db) {\n  \n  // const TodoListCol = collection(db, 'users');\n\n  // const TodoListCol = collection(db, 'todoList')\n  const TodoListCol = collectionGroup(db, 'todoList').where(\"user\", \"==\", \"hLUizMq2l7VhxFIH5XGf\")\n  //   .collection(\"todoList\")\n// .where(\"user\", \"==\", \"hLUizMq2l7VhxFIH5XGf\")\n  const TodoListSnapshot = await getDocs(TodoListCol).then(res=>{\n    console.log('__Data___Arrived___Below__LOC:20__APP.JS___')\n    let x = res.docs.map(doc => doc.data())\n    console.log(x)\n    console.log(x[0]['user']['id'])\n  });\n  // const TodoListList = TodoListSnapshot.docs.map(doc => doc.data());\n  return TodoListSnapshot;\n}\n  return (\n    <div className=\"App\">\n      <MainDashboard></MainDashboard>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}