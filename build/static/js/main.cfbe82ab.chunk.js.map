{"version":3,"sources":["logo.svg","component/TodoForm.js","component/ToDo.js","component/TodoList.js","component/MainDashboard.js","App.js","reportWebVitals.js","index.js"],"names":["ToDoForm","addTask","useState","userInput","setUserInput","onSubmit","e","preventDefault","value","type","onChange","currentTarget","placeholder","ToDo","todo","handleToggle","id","name","onClick","className","complete","task","ToDoList","toDoList","handleFilter","map","style","margin","MainDashboard","data","setToDoList","title","src","height","width","frameborder","scrolling","copy","length","TodoList","mapped","Number","filtered","filter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAAe,I,yCCuBAA,EArBE,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAEhB,EAAoCC,mBAAS,IAA7C,mBAAQC,EAAR,KAAmBC,EAAnB,KAWA,OACI,uBAAMC,SANW,SAACC,GAClBA,EAAEC,iBACFN,EAAQE,GACRC,EAAa,KAGb,UACI,uBAAOI,MAAOL,EAAWM,KAAK,OAAOC,SAXxB,SAACJ,GAClBF,EAAaE,EAAEK,cAAcH,QAUoCI,YAAY,kBACzE,gDCFGC,EAdF,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,aAOjB,OACI,qBAAKC,GAAIF,EAAKE,GAA8BC,KAAK,OAAOT,MAAOM,EAAKE,GAAIE,QANxD,SAACZ,GACjBA,EAAEC,iBACFQ,EAAaT,EAAEK,cAAcK,KAIiEG,UAAWL,EAAKM,SAAW,cAAgB,OAAzI,SACKN,EAAKO,MADaP,EAAKE,GAAKF,EAAKO,OCM/BC,EAbE,SAAC,GAA4C,IAA3CC,EAA0C,EAA1CA,SAAUR,EAAgC,EAAhCA,aAAcS,EAAkB,EAAlBA,aACvC,OACI,gCACKD,EAASE,KAAI,SAAAX,GACV,OACI,cAAC,EAAD,CAAMA,KAAMA,EAAMC,aAAcA,EAAcS,aAAcA,OAGpE,wBAAQE,MAAO,CAACC,OAAQ,QAAST,QAASM,EAA1C,iC,OCqCGI,MA3Cf,WAEE,MAAkC1B,mBAAS2B,GAA3C,mBAAQN,EAAR,KAAkBO,EAAlB,KAqBE,OACI,gCACI,oBAAIX,UAAU,MAAd,uBAGA,qBAAKA,UAAU,kBAAf,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,wBAAQY,MAAM,MAAMC,IAAI,mLAAoNC,OAAO,MAAMC,MAAM,OAAOC,YAAY,IAAIC,UAAU,SAEpS,sBAAKjB,UAAU,WAAf,UACA,cAAC,EAAD,CAAUlB,QAhBZ,SAACE,GACf,IAAIkC,EAAI,YAAOd,GACfc,EAAI,sBAAOA,GAAP,CAAa,CAAErB,GAAIO,EAASe,OAAS,EAAGjB,KAAMlB,EAAWiB,UAAU,KACvEU,EAAYO,MAcI,cAACE,EAAD,CAAUhB,SAAUA,EAAUR,aA/B3B,SAACC,GACpB,IAAIwB,EAASjB,EAASE,KAAI,SAAAJ,GACxB,OAAOA,EAAKL,KAAOyB,OAAOzB,GAAnB,2BAA8BK,GAA9B,IAAoCD,UAAWC,EAAKD,WAApD,eAAsEC,MAE/ES,EAAYU,IA2B8DhB,aAxBvD,WACnB,IAAIkB,EAAWnB,EAASoB,QAAO,SAAAtB,GAC7B,OAAQA,EAAKD,YAEfU,EAAYY,kBCRDE,MARf,WACE,OACE,qBAAKzB,UAAU,MAAf,SACE,cAAC,EAAD,OCKS0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.cfbe82ab.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react';\r\n\r\nconst ToDoForm = ({ addTask }) => {\r\n\r\n    const [ userInput, setUserInput ] = useState('');\r\n\r\n    const handleChange = (e) => {\r\n        setUserInput(e.currentTarget.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        addTask(userInput);\r\n        setUserInput(\"\");\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input value={userInput} type=\"text\" onChange={handleChange} placeholder=\"Enter task...\"/>\r\n            <button>Submit</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default ToDoForm;","import React from 'react';\r\n\r\nconst ToDo = ({todo, handleToggle}) => {\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault()\r\n        handleToggle(e.currentTarget.id)\r\n    }\r\n\r\n    return (\r\n        <div id={todo.id} key={todo.id + todo.task} name=\"todo\" value={todo.id} onClick={handleClick} className={todo.complete ? \"todo strike\" : \"todo\"}>\r\n            {todo.task}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToDo;","import React from 'react';\r\nimport ToDo from './ToDo';\r\n\r\nconst ToDoList = ({toDoList, handleToggle, handleFilter}) => {\r\n    return (\r\n        <div>\r\n            {toDoList.map(todo => {\r\n                return (\r\n                    <ToDo todo={todo} handleToggle={handleToggle} handleFilter={handleFilter}/>\r\n                )\r\n            })}\r\n            <button style={{margin: '20px'}} onClick={handleFilter}>Clear Completed</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToDoList;","import React, { useState } from 'react'\r\nimport \"./MainDashboard.css\";\r\nimport ToDoForm from './TodoForm';\r\nimport TodoList from './TodoList';\r\nimport data from \"./data.json\";\r\nfunction MainDashboard() {\r\n    \r\n  const [ toDoList, setToDoList ] = useState(data);\r\n\r\n  const handleToggle = (id) => {\r\n    let mapped = toDoList.map(task => {\r\n      return task.id === Number(id) ? { ...task, complete: !task.complete } : { ...task};\r\n    });\r\n    setToDoList(mapped);\r\n  }\r\n\r\n  const handleFilter = () => {\r\n    let filtered = toDoList.filter(task => {\r\n      return !task.complete;\r\n    });\r\n    setToDoList(filtered);\r\n  }\r\n\r\n  const addTask = (userInput ) => {\r\n    let copy = [...toDoList];\r\n    copy = [...copy, { id: toDoList.length + 1, task: userInput, complete: false }];\r\n    setToDoList(copy);\r\n  }\r\n    return (\r\n        <div>\r\n            <h1 className=\"red\">\r\n            Dashboard\r\n            </h1>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <iframe title=\"cal\" src=\"https://calendar.google.com/calendar/embed?height=600&amp;wkst=1&amp;bgcolor=%234285F4&amp;ctz=Asia%2FKolkata&amp;src=s.nishant%40aitglobalinc.com&amp;color=%23039BE5&amp;showTz=1&amp;mode=WEEK&amp;showTabs=1\"  height=\"520\" width=\"100%\" frameborder=\"0\" scrolling=\"no\"></iframe>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                    <ToDoForm addTask={addTask}/>\r\n                    <TodoList toDoList={toDoList} handleToggle={handleToggle} handleFilter={handleFilter}/>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainDashboard\r\n","import logo from './logo.svg';\nimport './App.css';\nimport MainDashboard from './component/MainDashboard';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainDashboard></MainDashboard>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}